export const code = `//layout.js

import { Inter } from "next/font/google";
import "./globals.css";
import Navbar from "@/components/Navbar";

const inter = Inter({ subsets: ["latin"] });

export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({ children }) {
  return (
    <html lang="en">
      <body className={inter.className}><Navbar />{children}</body>
    </html>
  );
}


`;

export const indexCode = `'use client'
import styles from './style.module.scss'
import { useEffect, useState } from 'react';
import Nav from './Nav';
import { AnimatePresence } from 'framer-motion';
import { usePathname } from 'next/navigation';

export default function Navbar() {

  const [isActive, setIsActive] = useState(false);
  const pathname = usePathname();

  useEffect( () => {
    if(isActive) setIsActive(false)
  }, [pathname])

  return (
    <>
    <div className={styles.main}>

      <div className={styles.header}>
        <div onClick={() => {setIsActive(!isActive)}} className={styles.button}>
          <div className={\`\${styles.burger} \${isActive ? styles.burgerActive : ""}\`}></div>
        </div>
      </div>

    </div>
    <AnimatePresence mode="wait">
      {isActive && <Nav />}
    </AnimatePresence>
    </>
  )
}
`;

export const indexStyle = `// style.module.scss

.button{
  position: fixed;
  background-color: #455CE9;
  width: 80px;
  height: 80px;
  margin: 20px;
  right: 0px;
  z-index: 2;
  border-radius: 50%;
  cursor: pointer;
  display: flex;
  align-items: center;
  justify-content: center;

}


.burger{
  width: 100%;
  &::after, &::before
      {
      content: "";
      display: block;
      height: 1px;
      width: 40%;
      margin: auto;
      background-color: white;
      position: relative;
      transition: transform 0.3s;
      }

  &::after{
      top : -5px;
  }

  &::before{
      top: 5px;
  }
}

.burgerActive{

  &::after{
      transform: rotate(45deg);
      top: -1px;
  }

  &::before{
      transform: rotate(-45deg);
      top: 0px;
  }
}
`;

export const indexAnim = `// anim.js

export const menuSlide = {

  initial: { x: "calc(+100% + 100px)" },
  enter: { x: "0", transition: { duration: 0.8, ease: [0.76, 0, 0.24, 1] } },
  exit: { x: "calc(100% + 100px)", transition: { duration: 0.8, ease: [0.76, 0, 0.24, 1] } }

}

export const slide = {

  initial: {x: 80},
  enter: i => ({x: 0, transition: {duration: 1.5, ease: [0.76, 0, 0.24, 1], delay: 0.05 * i}}),
  exit: i => ({x: 80, transition: {duration: 0.8, ease: [0.76, 0, 0.24, 1], delay: 0.05 * i}})

}

export const scale = {
  open: {scale: 1, transition: {duration: 0.3}},
  closed: {scale: 0, transition: {duration: 0.4}}

}
`;

export const curveIndex = `import React from 'react'
import { motion } from 'framer-motion';
import styles from './styles.module.scss';

export default function Index() {

  const initialPath = \`M100 0 L200 0 L200 \${window.innerHeight} L100 \${window.innerHeight} Q-100 \${window.innerHeight/2} 100 0\`;
  const targetPath = \`M100 0 L200 0 L200 \${window.innerHeight} L100 \${window.innerHeight} Q100 \${window.innerHeight/2} 100 0\`;
  
  const curve = {
    initial: {
        d: initialPath
    },
    enter: {
        d: targetPath,
        transition: {duration: 1, ease: [0.76, 0, 0.24, 1]}
    },
    exit: {
        d: initialPath,
        transition: {duration: 0.8, ease: [0.76, 0, 0.24, 1]}
    }
  }

  return (
    <svg className={styles.svgCurve}>
        <motion.path variants={curve} initial="initial" animate="enter" exit="exit"></motion.path>
    </svg>
  )
}`

export const curveStyle = `.svgCurve{
  position: absolute;
  top: 0;
  left: -99px;
  width: 100px;
  height: 100%;
  fill: rgb(41, 41, 41);
  stroke: none;
}`

export const linkIndex = `import styles from "./styles.module.scss";
import Link from "next/link";
import { motion } from "framer-motion";
import { slide, scale } from "../../anim";

export default function index({ data, isActive }) {
  const { title, href, index } = data;
  return (
    <motion.div
      className={styles.link}
      variants={slide}
      initial="initial"
      animate="enter"
      exit="exit"
      custom={index}
    >
      <motion.div
        variants={scale}
        animate={isActive ? "open" : "closed"}
      ></motion.div>
      <Link href={href}>{title}</Link>
    </motion.div>
  );
}
`

export const linkStyle = `.link{
  position: relative;
  display: flex;
  align-items: center;  
}`

export const theadComponent = {
  title1 : "Circular Navbar",
  title2 : "Build an Awwwards Curved Menu using Nextjs and Framer Motion.",
  decscription1 : "A website tutorial featuring an Awwwards curve preloader with text rendering over it, made with Next.js and Framer Motion.",
  date:"April 16, 2024",
  span:"",
  decscription2: "A curve is created using SVG path commands Inspired by https://dennissnellenberg.com/.",
  demoLink : "https://live-demo-sigma.vercel.app/circularNavbar",
  SourceCode : "https://github.com/21SINGH/circular_navbar",
  video : 'https://www.youtube.com/embed/m_7nX2bH878'
}